// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render correctly without specials 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "barId": 5,
        "barName": "Legends",
        "description": "$3 for any draft",
      },
      Object {
        "barId": 4,
        "barName": "Brothers",
        "description": "$1 wells",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  onViewableItemsChanged={undefined}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "marginLeft": 25,
            "marginRight": 25,
            "marginTop": 18.75,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "column",
                "marginBottom": 18.75,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Courier New",
                  },
                  Object {
                    "color": "silver",
                    "fontSize": 50,
                    "fontWeight": "bold",
                  },
                ]
              }
            >
              Legends
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Courier New",
                  },
                  Object {
                    "color": "darkgray",
                    "fontSize": 37.5,
                  },
                ]
              }
            >
              $3 for any draft
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#D3D3D3",
                "height": 1,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "marginLeft": 25,
            "marginRight": 25,
            "marginTop": 18.75,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "column",
                "marginBottom": 18.75,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Courier New",
                  },
                  Object {
                    "color": "silver",
                    "fontSize": 50,
                    "fontWeight": "bold",
                  },
                ]
              }
            >
              Brothers
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Courier New",
                  },
                  Object {
                    "color": "darkgray",
                    "fontSize": 37.5,
                  },
                ]
              }
            >
              $1 wells
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#D3D3D3",
                "height": 1,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`renders correctly with specials 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "barId": 5,
        "barName": "Legends",
        "description": "$3 for any draft",
      },
      Object {
        "barId": 4,
        "barName": "Brothers",
        "description": "$1 wells",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  onViewableItemsChanged={undefined}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "marginLeft": 25,
            "marginRight": 25,
            "marginTop": 18.75,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "column",
                "marginBottom": 18.75,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Courier New",
                  },
                  Object {
                    "color": "silver",
                    "fontSize": 50,
                    "fontWeight": "bold",
                  },
                ]
              }
            >
              Legends
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Courier New",
                  },
                  Object {
                    "color": "darkgray",
                    "fontSize": 37.5,
                  },
                ]
              }
            >
              $3 for any draft
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#D3D3D3",
                "height": 1,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "marginLeft": 25,
            "marginRight": 25,
            "marginTop": 18.75,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "column",
                "marginBottom": 18.75,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Courier New",
                  },
                  Object {
                    "color": "silver",
                    "fontSize": 50,
                    "fontWeight": "bold",
                  },
                ]
              }
            >
              Brothers
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "fontFamily": "Courier New",
                  },
                  Object {
                    "color": "darkgray",
                    "fontSize": 37.5,
                  },
                ]
              }
            >
              $1 wells
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#D3D3D3",
                "height": 1,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;
